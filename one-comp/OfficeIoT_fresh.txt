#
# Default settings for the simulation
#

## Scenario settings
Scenario.name = officeIoT_fresh_scenario
Scenario.simulateConnections = true
Scenario.updateInterval = 0.1
Scenario.repoXOffset = 300
# 43200s == 12h
Scenario.endTime = 10800


Scenario.simulateStorage = true


## Interface-specific settings:
# type : which interface class the interface belongs to
# For different types, the sub-parameters are interface-specific
# For DistanceCapacityInterface, the parameters are:
# transmitSpeed : transmit speed of the interface (bytes per second)
# transmitRange : range of the interface (meters)

# "Ethernet" interface for all nodes
ethInterface.type = SimpleBroadcastInterface
# Transmit speed of 20 Mbps = 12.5MBps
ethInterface.transmitSpeed = 12.5M
ethInterface.transmitRange = 250

# Add different speed and range interfaces for the different types of nodes,
# and after "addInterface" (register the) into the ConnectivityGrid.

# Wlan interface for repos
wlanRepInterface.type = SimpleBroadcastInterface
wlanRepInterface.transmitSpeed =20M
wlanRepInterface.transmitRange = 600

# Wlan interface for pedestrins
wlanPedInterface.type = DistanceCapacityInterface
wlanPedInterface.transmitSpeeds = 18M, 15M, 12M, 9M, 6M, 3M
wlanPedInterface.transmitRange = 35
#dummy speed
wlanPedInterface.transmitSpeed =0

# Wlan interface for cars
# IEEE 1609 specifies: "Physical access for high-speed (<27 Mb/s ~ 3MB/s), short-range (<1000 m), and low
#latency wireless communications in the vehicular environment." THERE CAN BE A PHYSICAL LAYER PROBLEM HERE.
wlanCarInterface.type = DistanceCapacityInterface
wlanCarInterface.transmitSpeeds = 20M, 16M, 12M, 8M, 4M
wlanCarInterface.transmitRange = 100
#dummy speed
wlanCarInterface.transmitSpeed =0

# Wlan interface for busses
wlanBusInterface.type = DistanceCapacityInterface
wlanBusInterface.transmitSpeeds = 25M, 20M, 15M, 10M, 5M
wlanBusInterface.transmitRange = 200
#dummy speed
wlanBusInterface.transmitSpeed =0

# Define 4 different node groups
Scenario.nrofHostGroups = 6

## Group-specific settings:
# groupID : Group's identifier. Used as the prefix of host names
# nrofHosts: number of hosts in the group
# movementModel: movement model of the hosts (valid class name from movement package)
# waitTime: minimum and maximum wait times (seconds) after reaching destination
# speed: minimum and maximum speeds (m/s) when moving on a path
# bufferSize: size of the message buffer (bytes)
# router: router used to route messages (valid class name from routing package)
# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)
# msgTtl : TTL (minutes) of the messages created by this host group, default=infinite

## Group and movement model specific settings
# pois: Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... )
#       for ShortestPathMapBasedMovement
# okMaps : which map nodes are OK for the group (map file indexes), default=all
#          for all MapBasedMovent models
# routeFile: route's file path - for MapRouteMovement
# routeType: route's type - for MapRouteMovement


# Common settings for all groups
Group.movementModel = ShortestPathMapBasedMovement
Group.router = RepoDirectDeliveryRouter
Group.bufferSize = 100M
Group.waitTime = 0, 120
# All nodes have the bluetooth interface
Group.nrofInterfaces = 1
#Group.interface1 = wlanInterface
# Walking speeds
Group.speed = 0.5, 1.5
# Message TTL of 300 minutes (5 hours)
Group.msgTtl = 300

Group.nrofHosts = 40

# group1 (pedestrians) repositories specific settings
Group1.groupID = r
Group1.movementModel = RepoStationaryMovement
#Group1.speed = 0, 0
Group1.storageCapability = true
Group1.processingCapability = true
Group1.storageSize = 5G
Group1.compressionRate = 2
# The repositories have to have all 3 interfaces, to receive
# information from all 3 types of traffic.
Group1.nrofInterfaces = 2
Group1.interface1 = wlanCarInterface
Group1.interface2 = ethInterface
#Group1.interface3 = wlanBusInterface
#Group1.interface4 = wlanRepInterface
Group1.nrofHosts = 80

# group2 pedestrians specific settings
Group2.groupID = p
Group2.interface1 = wlanCarInterface
# # 10-50 km/h
# Group2.speed = 2.7, 13.9

# group3 cars specific settings
Group3.groupID = i
Group3.movementModel = OfficeIoTStationaryMovement
Group3.officeLocationsFile = data/HelsinkiMedium/A_offices_mod.wkt
# Max distance from main office coordinate - needs tweaking.
Group3.officeSize = 100
Group3.nrOfOffices = 30
# Larger buffer size than pedestrians
Group3.bufferSize = 150M
Group3.interface1 = ethInterface
# More cars than anything else
Group3.nrofHosts = 250

# group3 cars specific settings
Group4.groupID = i
Group4.movementModel = OfficeIoTStationaryMovement
Group4.officeLocationsFile = data/HelsinkiMedium/F_offices_mod.wkt
# Max distance from main office coordinate - needs tweaking.
Group4.officeSize = 100
Group4.nrOfOffices = 30
# Larger buffer size than pedestrians
Group4.bufferSize = 150M
Group4.interface1 = ethInterface
# More cars than anything else
Group4.nrofHosts = 250

# The Bus groups
Group5.groupID = b
Group5.bufferSize = 500M
Group5.movementModel = MapRouteMovement
Group5.routeFile = data/tram3.wkt
Group5.routeType = 1
Group5.waitTime = 10, 30
Group5.speed = 4, 10
Group5.nrofHosts = 5
Group5.nrofInterfaces = 1
Group5.interface1 = wlanCarInterface

Group6.groupID = b
Group6.bufferSize = 500M
Group6.movementModel = MapRouteMovement
Group6.routeFile = data/tram4.wkt
Group6.routeType = 1
Group6.waitTime = 10, 30
Group6.speed = 4, 10
Group6.nrofHosts = 5
Group6.nrofInterfaces = 1
Group6.interface1 = wlanCarInterface

Group7.groupID = b
Group7.bufferSize = 500M
Group7.movementModel = MapRouteMovement
Group7.routeFile = data/tram10.wkt
Group7.routeType = 1
Group7.waitTime = 10, 30
Group7.speed = 4, 10
Group7.nrofHosts = 5
Group7.nrofInterfaces = 1
Group7.interface1 = wlanCarInterface

# Group5.groupID = t
# Group5.bufferSize = 50M
# Group5.movementModel = MapRouteMovement
# Group5.routeFile = data/tram4.wkt
# Group5.routeType = 2
# Group5.waitTime = 10, 30
# Group5.speed = 7, 10
# Group5.nrofHosts = 2

# Group6.groupID = t
# Group6.bufferSize = 50M
# Group6.movementModel = MapRouteMovement
# Group6.routeFile = data/tram10.wkt
# Group6.routeType = 2
# Group6.waitTime = 10, 30
# Group6.speed = 7, 10
# Group6.nrofHosts = 2


## Message creation parameters
# How many event generators
Events.nrof = 0
# Class of the pedestrians event generator
#Events1.class = ReposMessageEventGenerator
# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds (one new message every 25 to 35 seconds)
#Events1.hostnames = p
#Events1.interval = 35,45
# Message sizes (900kB - 1MB)
#Events1.size = 900000,1100000
# range of message source addresses
#Events1.hosts = 40,79
# range of message destination addresses
#Events1.tohosts = r
# Message ID prefix
#Events1.prefix = MP

# Class of the cars event generator
#Events2.class = ReposMessageEventGenerator
# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds (one new message every 25 to 35 seconds)
#Events2.interval = 4,5
# Message sizes (900kB - 1MB)
#Events2.size = 900000,1100000
# range of message source/destination addresses
#Events2.hosts = 80,119
# range of message destination addresses
#Events2.tohosts = r
# Message ID prefix
#Events2.prefix = MC

# Class of the busses event generator
#Events3.class = ReposMessageEventGenerator
# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds (one new message every 25 to 35 seconds)
#Events3.interval = 1,2
# Message sizes (900kB - 1MB)
#Events3.size = 900000,1100000
# range of message source/destination addresses
#Events3.hosts = 120,134
# range of message destination addresses
#Events3.tohosts = r
# Message ID prefix
#Events3.prefix = MB

# Class of storage depletion
#Events4.class = ReposStorageConstantDepletion
# (following settings are specific for the ReposStorageConstantDepletion class)
# Depletion interval in seconds (a number of messages depleted/second)
#Events4.depletionInterval = [3; 2; 1]
# Number of message depleted each depletionInterval
#Events4.msgNo = 2
# Host names of host storages to be depleted
#Events4.depletionHostnames = r
# Lower limit at which depletion starts
#Events4.lowerLimit = 2500000000

# Class of storage depletion
#Events4.class = ReposStorageConstantProcDepletion
# (following settings are specific for the ReposStorageConstantDepletion class)
# Depletion interval in seconds (a number of messages depleted/second)
#Events4.depletionInterval = 1
# Number of message depleted each depletionInterval
#Events4.processedMsgNo = [3; 2; 1]
# Host names of host storages to be depleted
#Events4.procDepletionHostnames = r


## Movement model settings
# seed for movement models' pseudo random number generator (default = 0)
MovementModel.rngSeed = 1
# World's size for Movement Models without implicit size (width, height; meters)
MovementModel.worldSize = 4500, 3400
# How long time to move hosts in the world before real simulation
MovementModel.warmup = 1000

## Map based movement -movement model specific settings
MapBasedMovement.nrofMapFiles = 4

MapBasedMovement.mapFile1 = data/roads.wkt
MapBasedMovement.mapFile2 = data/main_roads.wkt
MapBasedMovement.mapFile3 = data/pedestrian_paths.wkt
MapBasedMovement.mapFile4 = data/shops.wkt

## Reports - all report names have to be valid report classes

# how many reports to load
Report.nrofReports = 15
# length of the warm up period (simulated seconds)
Report.warmup = 0
RepoMessageLocationReport.granularity = 1
RepoStoredMessageLocationReport.granularity = 1
MobileMessageLocationReport.granularity = 1
RepoIncomingSpeedsReport.granularity = 1
RepoDeletedMessagesReport.granularity = 1
RepoProcessingMessageLocationReport.granularity = 1
RepoProcessedMessageLocationReport.granularity = 1
RepoAllMessagesLocationReport.granularity = 1
MobileDeletedMessagesReport.granularity = 1
RepoUnprocessedMessagesLocationReport.granularity = 1
RepoDepletedProcBWReport.granularity = 1
RepoDepletedUnProcBWReport.granularity = 1
RepoDepletedStorageBWReport.granularity = 1
RepoDepletedCloudStorageBWReport.granularity = 1
Report.endTime = 10750
FileLocationReport.granularity = 5

# default directory of reports (can be overridden per Report with output setting)
Report.reportDir = reports/
# Report classes to load
Report.report1 = RepoIncomingSpeedsReport
Report.report2 = MobileDeletedMessagesReport

Report.report3 = RepoProcessingMessageLocationReport
Report.report4 = RepoStoredMessageLocationReport

Report.report5 = RepoProcessedMessageLocationReport
Report.report6 = RepoAllMessagesLocationReport
Report.report7 = RepoDepletedProcBWReport
Report.report8 = RepoDepletedUnProcBWReport
Report.report9 = RepoDepletedStorageBWReport
Report.report10 = RepoDepletedCloudStorageBWReport
Report.report11 = RepoSatisfactionReport
Report.report12 = RepoStorTimesReport
Report.report13 = RepoProcFreshnessReport
Report.report14 = RepoUnProcessedReport
Report.report15 = RepoOvertimeReport

RepoIncomingSpeedsReport.output = [officeIoT_fresh/RISR1;officeIoT_fresh/RISR2;officeIoT_fresh/RISR3; officeIoT_fresh/RISR4; officeIoT_fresh/RISR5; officeIoT_fresh/RISR6]
RepoDeletedMessagesReport.output = [officeIoT_fresh/RDMR1;officeIoT_fresh/RDMR2;officeIoT_fresh/RDMR3; reports/RDMR4; officeIoT_fresh/RDMR5; officeIoT_fresh/RDMR6]
MobileDeletedMessagesReport.output = [officeIoT_fresh/MDMR1;officeIoT_fresh/MDMR2;officeIoT_fresh/MDMR3; officeIoT_fresh/MDMR4; officeIoT_fresh/MDMR5; officeIoT_fresh/MDMR6]
RepoProcessingMessageLocationReport.output = [officeIoT_fresh/RPrMR1;officeIoT_fresh/RPrMR2;officeIoT_fresh/RPrMR3; officeIoT_fresh/RPrMR4; officeIoT_fresh/RPrMR5; officeIoT_fresh/RPrMR6]
RepoStoredMessageLocationReport.output = [officeIoT_fresh/RSMR1;officeIoT_fresh/RSMR2;officeIoT_fresh/RSMR3; officeIoT_fresh/RSMR4; officeIoT_fresh/RSMR5; officeIoT_fresh/RSMR6]
RepoProcessedMessageLocationReport.output = [officeIoT_fresh/RPMR1;officeIoT_fresh/RPMR2;officeIoT_fresh/RPMR3; officeIoT_fresh/RPMR4; officeIoT_fresh/RPMR5; officeIoT_fresh/RPMR6]
RepoAllMessagesLocationReport.output = [officeIoT_fresh/RAMR1;officeIoT_fresh/RAMR2;officeIoT_fresh/RAMR3; officeIoT_fresh/RAMR4; officeIoT_fresh/RAMR5; officeIoT_fresh/RAMR6]
RepoDepletedProcBWReport.output = [officeIoT_fresh/RPBWR1;officeIoT_fresh/RPBWR2;officeIoT_fresh/RPBWR3; officeIoT_fresh/RPBWR4; officeIoT_fresh/RPBWR5; officeIoT_fresh/RPBWR6]
RepoDepletedUnProcBWReport.output = [officeIoT_fresh/RUPBWR1;officeIoT_fresh/RUPBWR2;officeIoT_fresh/RUPBWR3; officeIoT_fresh/RUPBWR4; officeIoT_fresh/RUPBWR5; officeIoT_fresh/RUPBWR6]
RepoDepletedCloudStorageBWReport.output = [officeIoT_fresh/RCSBWR1; officeIoT_fresh/RCSBWR2; officeIoT_fresh/RCSBWR3; officeIoT_fresh/RCSBWR4; officeIoT_fresh/RCSBWR5; officeIoT_fresh/RCSBWR6]
RepoDepletedStorageBWReport.output = [officeIoT_fresh/RSBWR1; officeIoT_fresh/RSBWR2; officeIoT_fresh/RSBWR3; officeIoT_fresh/RSBWR4; officeIoT_fresh/RSBWR5; officeIoT_fresh/RSBWR6]
RepoSatisfactionReport.output = [officeIoT_fresh/RSR1; officeIoT_fresh/RSR2; officeIoT_fresh/RSR3; officeIoT_fresh/RSR4; officeIoT_fresh/RSR5; officeIoT_fresh/RSR6]
RepoProcFreshnessReport.output = [officeIoT_fresh/RPFR1; officeIoT_fresh/RPFR2; officeIoT_fresh/RPFR3; officeIoT_fresh/RPFR4; officeIoT_fresh/RPFR5; officeIoT_fresh/RPFR6]
RepoStorTimesReport.output = [officeIoT_fresh/RSTR1; officeIoT_fresh/RSTR2; officeIoT_fresh/RSTR3; officeIoT_fresh/RSTR4; officeIoT_fresh/RSTR5; officeIoT_fresh/RSTR6]
RepoUnProcessedReport.output = [officeIoT_fresh/RUR1; officeIoT_fresh/RUR2; officeIoT_fresh/RUR3; officeIoT_fresh/RUR4; officeIoT_fresh/RUR5; officeIoT_fresh/RUR6]
RepoOvertimeReport.output = [officeIoT_fresh/ROR1; officeIoT_fresh/ROR2; officeIoT_fresh/ROR3; officeIoT_fresh/ROR4; officeIoT_fresh/ROR5; officeIoT_fresh/ROR6]

## Default settings for some routers settings
ProphetRouter.secondsInTimeUnit = 30
SprayAndWaitRouter.nrofCopies = 6
SprayAndWaitRouter.binaryMode = true

## Optimization settings -- these affect the speed of the simulation
## see World class for details.
Optimization.cellSizeMult = 5
Optimization.randomizeUpdateOrder = true


## GUI settings

# GUI underlay image settings
GUI.UnderlayImage.fileName = data/helsinki_underlay.png
# Image offset in pixels (x, y)
GUI.UnderlayImage.offset = 64, 20
# Scaling factor for the image
GUI.UnderlayImage.scale = 4.75
# Image rotation (radians)
GUI.UnderlayImage.rotate = -0.015

# how many events to show in the log panel (default = 30)
GUI.EventLogPanel.nrofEvents = 100
# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)
#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$


# Define new application
procApp.type = ProcApplication
# Messages to be depleted (processing first and, if any left, nonprocessing, after)
procApp.depletionRate = 20M
procApp.cloudRate = 10M
procApp.passive = false
procApp.coreNo = 10
procApp.maxStorage = 0.95
procApp.minStorage = 0.001
procApp.storageMode = false

# Define new application
procApp1.type = ProcGenApplication
procApp1.interval = 2
procApp1.delay = 0.5
procApp1.nonprocShelf = 3
procApp1.destinationName = r
procApp1.procSize = 1M
# Stored message ratio to processing message (no. of messages to be stored vs. no. of messages to be processed)
procApp1.compressRate = 1,0
procApp1.passiveRate = 1,0
procApp1.passive = false

# Define new application
procApp2.type = ProcGenApplication
procApp2.interval = 1
procApp2.delay = 0.1
procApp2.freshPer = [2.27; 1.92; 1.88; 1.67; 1.56; 1]
procApp2.procShelf = [2.5; 2.5; 2.5; 2.5; 2.5; 2]
procApp2.nonprocShelf = [300; 800; 600; 600; 800; 1000]
procApp2.destinationName = r
procApp2.procSize = 50k
# Stored message ratio to processing message (no. of messages to be stored vs. no. of messages to be processed)
procApp2.compressRate = 1,4
procApp2.passiveRate = [3,1; 3,1; 3,1; 3,1; 3,1; 4,1]
procApp2.passive = false

# Define new application
procApp3.type = ProcGenApplication
procApp3.interval = 0.7
procApp3.delay = 0.3
procApp3.freshPer = 1.5
procApp3.procShelf = 2
procApp3.nonprocShelf = 1.5
procApp3.destinationName = r
procApp3.procSize = 1M
# Stored message ratio to processing message (no. of messages to be stored vs. no. of messages to be processed)
procApp3.compressRate = 1,3
procApp3.passiveRate = 2,2
procApp3.passive = false

# Set proc app for all nodes
Group1.nrofApplications = 1
Group2.nrofApplications = 1
Group3.nrofApplications = 1
Group4.nrofApplications = 1
Group5.nrofApplications = 1
Group6.nrofApplications = 1
Group7.nrofApplications = 1
Group1.application1 = procApp
Group2.application1 = procApp1
Group3.application1 = procApp2
Group4.application1 = procApp2
Group5.application1 = procApp3
Group6.application1 = procApp3
Group7.application1 = procApp3


